{
  "version": 3,
  "sources": ["src/app/common/services/loader.ts"],
  "sourcesContent": ["import { Injectable, Renderer2, RendererFactory2, Inject, PLATFORM_ID } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { BehaviorSubject, finalize, Observable } from 'rxjs';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoaderService implements HttpInterceptor {\r\n    private showLoaderSubject = new BehaviorSubject<boolean>(false);\r\n    private showLoaderTrans = new BehaviorSubject<boolean>(false);\r\n    public showLoader$ = this.showLoaderSubject.asObservable();\r\n    public showLoaderTrans$ = this.showLoaderTrans.asObservable();\r\n    \r\n    private renderer: Renderer2;\r\n    private isBrowser: boolean;\r\n\r\n    constructor(\r\n        private titleService: Title, \r\n        private rendererFactory: RendererFactory2,\r\n        @Inject(PLATFORM_ID) private platformId: any\r\n    ) {\r\n        // Initialize Renderer2\r\n        this.renderer = this.rendererFactory.createRenderer(null, null);\r\n        // Check if we are in the browser\r\n        this.isBrowser = isPlatformBrowser(this.platformId);\r\n    }\r\n\r\n    show(n: number) {\r\n        this.showLoaderSubject.next(true);\r\n        this.showLoaderTrans.next(n ? true : false);\r\n\r\n        if (this.isBrowser) {\r\n            // Only manipulate the DOM if we're in a browser environment\r\n            const body = document.body;\r\n            this.renderer.setStyle(body, 'overflow', 'hidden');\r\n            this.renderer.setStyle(body, 'position', 'fixed');\r\n            this.renderer.setStyle(body, 'width', '100%');\r\n            this.renderer.setStyle(body, 'height', '100%');\r\n        }\r\n    }\r\n\r\n    hide() {\r\n        setTimeout(() => {\r\n            this.showLoaderSubject.next(false);\r\n            this.showLoaderTrans.next(false);\r\n            \r\n            if (this.isBrowser) {\r\n                // Only manipulate the DOM if we're in a browser environment\r\n                const body = document.body;\r\n                this.renderer.removeStyle(body, 'overflow');\r\n                this.renderer.removeStyle(body, 'position');\r\n                this.renderer.removeStyle(body, 'width');\r\n                this.renderer.removeStyle(body, 'height');\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    getTitle() {\r\n        return this.titleService.getTitle();\r\n    }\r\n\r\n    intercept(\r\n        request: HttpRequest<any>,\r\n        next: HttpHandler\r\n    ): Observable<HttpEvent<any>> {\r\n        this.show(0);\r\n        return next.handle(request).pipe(\r\n            finalize(() => {\r\n                this.hide();\r\n            })\r\n        );\r\n    }\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;AASM,IAAO,gBAAP,MAAO,eAAa;EAStB,YACY,cACA,iBACqB,YAAe;AAFpC,SAAA,eAAA;AACA,SAAA,kBAAA;AACqB,SAAA,aAAA;AAXzB,SAAA,oBAAoB,IAAI,gBAAyB,KAAK;AACtD,SAAA,kBAAkB,IAAI,gBAAyB,KAAK;AACrD,SAAA,cAAc,KAAK,kBAAkB,aAAY;AACjD,SAAA,mBAAmB,KAAK,gBAAgB,aAAY;AAWvD,SAAK,WAAW,KAAK,gBAAgB,eAAe,MAAM,IAAI;AAE9D,SAAK,YAAY,kBAAkB,KAAK,UAAU;EACtD;EAEA,KAAK,GAAS;AACV,SAAK,kBAAkB,KAAK,IAAI;AAChC,SAAK,gBAAgB,KAAK,IAAI,OAAO,KAAK;AAE1C,QAAI,KAAK,WAAW;AAEhB,YAAM,OAAO,SAAS;AACtB,WAAK,SAAS,SAAS,MAAM,YAAY,QAAQ;AACjD,WAAK,SAAS,SAAS,MAAM,YAAY,OAAO;AAChD,WAAK,SAAS,SAAS,MAAM,SAAS,MAAM;AAC5C,WAAK,SAAS,SAAS,MAAM,UAAU,MAAM;IACjD;EACJ;EAEA,OAAI;AACA,eAAW,MAAK;AACZ,WAAK,kBAAkB,KAAK,KAAK;AACjC,WAAK,gBAAgB,KAAK,KAAK;AAE/B,UAAI,KAAK,WAAW;AAEhB,cAAM,OAAO,SAAS;AACtB,aAAK,SAAS,YAAY,MAAM,UAAU;AAC1C,aAAK,SAAS,YAAY,MAAM,UAAU;AAC1C,aAAK,SAAS,YAAY,MAAM,OAAO;AACvC,aAAK,SAAS,YAAY,MAAM,QAAQ;MAC5C;IACJ,GAAG,GAAG;EACV;EAEA,WAAQ;AACJ,WAAO,KAAK,aAAa,SAAQ;EACrC;EAEA,UACI,SACA,MAAiB;AAEjB,SAAK,KAAK,CAAC;AACX,WAAO,KAAK,OAAO,OAAO,EAAE,KACxB,SAAS,MAAK;AACV,WAAK,KAAI;IACb,CAAC,CAAC;EAEV;;;uBAhES,gBAAa,mBAAA,KAAA,GAAA,mBAAA,gBAAA,GAAA,mBAYV,WAAW,CAAA;IAAA;EAAA;;4EAZd,gBAAa,SAAb,eAAa,WAAA,YAFV,OAAM,CAAA;EAAA;;",
  "names": []
}
