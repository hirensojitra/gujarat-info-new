{
  "version": 3,
  "sources": ["src/app/common/services/post-detail.service.ts", "src/app/common/services/baseuri.service.ts", "src/app/module/poster/poster.component.ts", "src/app/module/poster/poster.component.html", "src/app/module/poster/poster-routing.module.ts", "src/app/module/poster/poster.module.ts"],
  "sourcesContent": ["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, map } from 'rxjs';\r\nimport { PostDetails } from '../interfaces/image-element';\r\nimport { environment } from '../../../environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class PostDetailService {\r\n    private baseUrl = environment.MasterApi + '/post-detail';\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n    getAllPosts(page: number): Observable<PostDetails[]> {\r\n        return this.http.get<PostDetails[]>(`${this.baseUrl}?page=${page}`);\r\n    }\r\n\r\n    addPost(newPostData: PostDetails): Observable<PostDetails> {\r\n        console.log(newPostData)\r\n        return this.http.post<PostDetails>(`${this.baseUrl}`, newPostData).pipe(\r\n            map(response => {\r\n                console.log(response)\r\n                const newPostId = response.id;\r\n                newPostData.id = newPostId;\r\n                return newPostData;\r\n            })\r\n        );\r\n    }\r\n\r\n    getPostById(id: string): Observable<PostDetails> {\r\n        return this.http.get<PostDetails>(`${this.baseUrl}/get/${id}`);\r\n    }\r\n\r\n    updatePost(newData: PostDetails): Observable<any> {\r\n        return this.http.put<any>(`${this.baseUrl}/update/`, newData);\r\n    }\r\n\r\n    softDeletePost(id: string): Observable<any> {\r\n        return this.http.delete<any>(`${this.baseUrl}/soft-delete/${id}`);\r\n    }\r\n    recoverPost(id: string): Observable<any> {\r\n        return this.http.delete<any>(`${this.baseUrl}/recover/${id}`);\r\n    }\r\n\r\n    hardDeletePost(id: string): Observable<any> {\r\n        return this.http.delete<any>(`${this.baseUrl}/hard-delete/${id}`);\r\n    }\r\n    downloadCounter(id: string): Observable<any> {\r\n        return this.http.get<any>(`${this.baseUrl}/download-counter/${id}`);\r\n    }\r\n    updateDownloadCounter(id: string): Observable<any> {\r\n        return this.http.get<any>(`${this.baseUrl}/update-download-counter/${id}`);\r\n    }\r\n\r\n    getAllSoftDeletedPosts(page: number): Observable<PostDetails[]> {\r\n        return this.http.get<PostDetails[]>(`${this.baseUrl}/soft-deleted/?page=${page}`);\r\n    }\r\n\r\n    getTotalPostLength(): Observable<{ totalLength: number }> {\r\n        return this.http.get<{ totalLength: number }>(`${this.baseUrl}/post-length`);\r\n    }\r\n\r\n    getTotalDeletedPostLength(): Observable<{ totalLength: number }> {\r\n        return this.http.get<{ totalLength: number }>(`${this.baseUrl}/post-deleted-length`);\r\n    }\r\n}\r\n", "import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\r\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class BaseUrlService {\r\n    private baseUrl: string = '';\r\n\r\n    constructor(\r\n        @Inject(DOCUMENT) private document: Document,\r\n        @Inject(PLATFORM_ID) private platformId: Object\r\n    ) { }\r\n\r\n    getBaseUrl(): string {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            // Access Document only in the browser\r\n            let baseUrl = this.document.baseURI;\r\n            if (!baseUrl.startsWith('https://')) {\r\n                // Prepend 'https://' if the base URL doesn't start with it\r\n                baseUrl = 'https://' + baseUrl.substring(baseUrl.indexOf('://') + 3);\r\n            }\r\n            this.baseUrl = baseUrl;\r\n        } else {\r\n            // Handle SSR: Return a default base URL or some fallback logic\r\n            console.warn('Document is not available in SSR. Returning fallback base URL.');\r\n            this.baseUrl = 'https://gujarat-uvach.netlify.app/'; // Replace with a sensible fallback for SSR\r\n        }\r\n        return this.baseUrl;\r\n    }\r\n}\r\n", "import { AfterViewInit, Component, ElementRef, Inject, OnInit, PLATFORM_ID, Renderer2, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Title, Meta } from '@angular/platform-browser';\r\nimport { ImageElement, PostDetails } from '../../common/interfaces/image-element';\r\nimport { PostDetailService } from '../../common/services/post-detail.service';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { SvgRectService } from '../../common/services/svg-rect.service';\r\nimport { SvgCircleService } from '../../common/services/svg-circle.service';\r\nimport { SvgEllipseService } from '../../common/services/svg-ellipse.service';\r\nimport { DevelopmentService } from '../../common/services/development.service';\r\nimport { PlatformService } from '../../common/services/platform.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ToastService } from '../../common/services/toast.service';\r\nimport { LoaderService } from '../../common/services/loader';\r\nimport { FontService } from '../../common/services/fonts.service';\r\nimport { BaseUrlService } from '../../common/services/baseuri.service';\r\nimport { SEOService } from 'src/app/common/services/seo.service';\r\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\r\n\r\ninterface MatchObject {\r\n  components: string;\r\n}\r\ninterface Subtable {\r\n  substitutions: { [key: string]: boolean };\r\n  match: MatchObject[];\r\n}\r\ninterface FontStyles {\r\n  [fontFamily: string]: Set<string>;\r\n}\r\n\r\n\r\ndeclare const bootstrap: any;\r\ninterface data {\r\n  id: string;\r\n  value: string;\r\n  index: string;\r\n  type: string;\r\n  title: string;\r\n  lang?: string;\r\n  controlName?: string;\r\n  dependency?: string;\r\n  api?: string;\r\n}\r\n@Component({\r\n  selector: 'app-poster',\r\n  templateUrl: './poster.component.html',\r\n  styleUrls: ['./poster.component.scss']\r\n})\r\nexport class PosterComponent implements OnInit {\r\n  postDetailsDefault: PostDetails | undefined;\r\n  postDetails: PostDetails | undefined;\r\n  imgParam: string;\r\n  isDeleted: boolean | undefined;\r\n  postStatus: string | undefined = 'loading';\r\n  dataset: data[] = [];\r\n  apiData: { [key: string]: any[] } = {};\r\n  selectData: { [key: string]: { lang: string, value: string, api: string, dependency: string, text: SVGAElement } } = {};\r\n\r\n  selectedIndex: number | null = null;\r\n  selectedID: string | null = null;\r\n\r\n  inputTextForm: FormGroup;\r\n  formData: FormGroup;\r\n  inputImageForm: FormGroup;\r\n\r\n  downloaded: boolean = false;\r\n  canDownload: boolean = false;\r\n\r\n  textModal: any;\r\n  textModalTitle: string | undefined = '';\r\n\r\n  myInfo: any;\r\n  encodedText = encodeURIComponent(\"Hello, Hiren!\\nI'm interested to create Poster Generate Link\");\r\n  cropperModal: any;\r\n  imageCropper: any;\r\n  selectedImage: string = '';\r\n  baseUrl: string;\r\n  finalImage: any;\r\n  pageLink: string = '';\r\n\r\n  @ViewChild('imageDraw') imageDraw!: ElementRef<SVGElement | HTMLElement>;\r\n  @ViewChild('textInput') textInput!: ElementRef;\r\n  @ViewChild('imageInput') imageInput!: ElementRef;\r\n\r\n  imgModalTitle: string = '';\r\n  cropper!: Cropper;\r\n  cropperModalTitle: string | undefined = '';\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private titleService: Title,\r\n    private metaService: Meta,\r\n    private PS: PostDetailService,\r\n    private renderer: Renderer2,\r\n    private Rect: SvgRectService,\r\n    private Circle: SvgCircleService,\r\n    private Ellipse: SvgEllipseService,\r\n    private commonService: DevelopmentService,\r\n    private fb: FormBuilder,\r\n    private platformService: PlatformService,\r\n    private http: HttpClient,\r\n    private toastService: ToastService,\r\n    private loaderService: LoaderService,\r\n    private fontService: FontService,\r\n    private elementRef: ElementRef,\r\n    private baseUrlService: BaseUrlService,\r\n    private seoService: SEOService,\r\n    @Inject(PLATFORM_ID) private platformId: Object\r\n\r\n  ) {\r\n    this.inputTextForm = this.fb.group({\r\n      text: ['', Validators.required]\r\n    });\r\n    this.inputImageForm = this.fb.group({\r\n      image: ['']\r\n    });\r\n    this.formData = this.fb.group({});\r\n    this.baseUrl = this.baseUrlService.getBaseUrl();\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      console.log('Running on the browser');\r\n      await this.route.paramMap.subscribe(async params => {\r\n        this.imgParam = params.get('img');\r\n        if (this.imgParam) {\r\n          this.postDetailsDefault = await this.PS.getPostById(this.imgParam.toString()).toPromise() as PostDetails;\r\n          if (this.postDetailsDefault && !this.postDetailsDefault.deleted) {\r\n            this.getPostById();\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    if (isPlatformServer(this.platformId)) {\r\n      this.route.data.subscribe(async data => {\r\n        !data['title'] && this.titleService.setTitle(data['title'] || 'Poster Download');\r\n        !data['description'] && this.metaService.updateTag({ name: 'description', content: data['description'] || 'Discover our web application for generating election campaign posters, festival posts, and other promotional activities. Customize posters with photos, names, addresses, designations, and contact details for efficient and personalized promotional material.' });\r\n        !data['keywords'] && this.metaService.updateTag({ name: 'keywords', content: data['keywords'] || 'poster generation, campaign posters, election posters, festival posts, promotional activities, customization, Gujarat Uvach, web application' });\r\n        !data['robots'] && this.metaService.updateTag({ name: 'robots', content: data['robots'] || 'index, follow' });\r\n        !data['og:title'] && this.metaService.updateTag({ property: 'og:title', content: data['og:title'] || 'Default OG title' });\r\n        !data['og:description'] && this.metaService.updateTag({ property: 'og:description', content: data['og:description'] || 'Default OG description' });\r\n        !data['og:image'] && this.metaService.updateTag({ property: 'og:image', content: data['og:image'] || 'https://vmi2070714.contaboserver.net/api/v1/img/uploads/wLmyK?quality=30' });\r\n      })\r\n      await this.seoService.initSEO();\r\n      await this.route.paramMap.subscribe(async params => {\r\n        this.imgParam = params.get('img');\r\n        if (this.imgParam) {\r\n          this.postDetailsDefault = await this.PS.getPostById(this.imgParam.toString()).toPromise() as PostDetails;\r\n          if (this.postDetailsDefault && !this.postDetailsDefault.deleted) {\r\n            await this.changeMetadataDynamically();\r\n          }\r\n        }\r\n      });\r\n    }\r\n    await new Promise(resolve => setTimeout(resolve, 1500));\r\n\r\n  }\r\n  async changeMetadataDynamically(): Promise<void> {\r\n    this.titleService.setTitle(this.postDetailsDefault.title);\r\n    this.metaService.updateTag({ name: 'description', content: this.postDetailsDefault.info });\r\n  }\r\n  async getPostById(): Promise<void> {\r\n    const post: PostDetails = this.postDetailsDefault;\r\n    if (!post) return;\r\n    this.postDetails = post;\r\n    const p = JSON.parse(JSON.stringify(post));\r\n    this.isDeleted = post.deleted;\r\n    if (!post.deleted) {\r\n      this.postStatus = 'loading';\r\n      const bg = await this.getImageDataUrl(post.backgroundurl);\r\n      post.backgroundurl = bg;\r\n      post.data.map(async (item) => {\r\n        if (item.image && item.image.imageUrl) {\r\n          item.image.imageUrl = await this.getImageDataUrl(item.image.imageUrl);\r\n        }\r\n      });\r\n      this.initialize()\r\n    } else if (post.deleted && post.msg) {\r\n      this.postStatus = post.msg;\r\n    }\r\n    this.textModal = new bootstrap.Modal(document.getElementById('textModal')!, { focus: false, keyboard: false, static: false });\r\n    this.textModal._element.addEventListener('hide.bs.modal', () => { this.inputTextForm.reset(); });\r\n    this.textModal._element.addEventListener('show.bs.modal', () => { });\r\n    this.textModal._element.addEventListener('shown.bs.modal', () => { this.textInput.nativeElement.focus(); });\r\n    this.myInfo = new bootstrap.Modal(document.getElementById('myInfo')!, { focus: false, keyboard: false, static: false });\r\n    this.cropperModal = new bootstrap.Modal(document.getElementById('cropperModal')!, { focus: false, keyboard: false, static: false });\r\n    this.cropperModal._element.addEventListener('hide.bs.modal', () => { if (this.cropper) { this.cropper.destroy(); } });\r\n    this.cropperModal._element.addEventListener('show.bs.modal', () => { });\r\n    this.imageCropper = new bootstrap.Modal(document.getElementById('imageCropper')!, { focus: false, keyboard: false, static: false });\r\n    this.imageCropper._element.addEventListener('hide.bs.modal', () => { if (this.cropper) { this.cropper.destroy(); } });\r\n    this.imageCropper._element.addEventListener('show.bs.modal', () => { });\r\n  }\r\n  async getImageDataUrl(imageUrl: string): Promise<string> {\r\n    try {\r\n      // Fetch the image\r\n      const response = await fetch(imageUrl);\r\n      const blob = await response.blob();\r\n\r\n      // Convert the blob to a data URL\r\n      return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => resolve(reader.result as string);\r\n        reader.onerror = reject;\r\n        reader.readAsDataURL(blob);\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching or converting image:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  async initialize(): Promise<void> {\r\n    try {\r\n      await Promise.all([this.drawSVG(), this.buildForm()]);\r\n    } catch (error) {\r\n      console.error('An error occurred during initialization:', error);\r\n    }\r\n  }\r\n  async drawSVG() {\r\n    if (this.postDetails) {\r\n      const backgroundurl = this.postDetails.backgroundurl;\r\n      const svg = this.imageDraw.nativeElement;\r\n      const svgDefs = document.createElementNS('http://www.w3.org/2000/svg', 'defs') as SVGDefsElement;\r\n      this.postStatus = 'Total Download: ' + this.postDetails.download_counter;\r\n      while (svg.firstChild) {\r\n        svg.removeChild(svg.firstChild);\r\n      }\r\n      const linkElement = document.createElementNS('http://www.w3.org/2000/svg', 'link');\r\n      linkElement.setAttribute('rel', 'stylesheet');\r\n      linkElement.setAttribute('href', 'https://fonts.googleapis.com/css2?family=Anek+Gujarati:wght@100..800&family=Baloo+Bhai+2:wght@400..800&family=Farsan&family=Hind+Vadodara:wght@300;400;500;600;700&family=Kumar+One&family=Kumar+One+Outline&family=Mogra&family=Mukta+Vaani:wght@200;300;400;500;600;700;800&family=Noto+Sans+Gujarati:wght@100..900&family=Noto+Serif+Gujarati:wght@100..900&family=Rasa:ital,wght@0,300..700;1,300..700&family=Shrikhand&display=swap');\r\n\r\n      // Append the <link> element to the SVG's <defs> element\r\n      svgDefs.appendChild(linkElement);\r\n      svg.appendChild(svgDefs);\r\n      this.renderer.setAttribute(svg, 'viewBox', \"0 0 \" + (this.postDetails.w || 0) + \" \" + (this.postDetails.h || 0));\r\n      const b = this.renderer.createElement('image', 'http://www.w3.org/2000/svg');\r\n      this.renderer.setAttribute(b, 'x', '0');\r\n      this.renderer.setAttribute(b, 'y', '0');\r\n      this.renderer.setAttribute(b, 'width', '100%'); // Set width to 100%\r\n      this.renderer.setAttribute(b, 'height', '100%'); // Set height to 100%\r\n      this.renderer.setAttribute(b, 'preserveAspectRatio', 'xMidYMid slice'); // Use slice to cover and maintain aspect ratio\r\n      this.renderer.setAttribute(b, 'href', backgroundurl);\r\n      this.renderer.appendChild(svg, svgDefs);\r\n      this.renderer.appendChild(svg, b);\r\n      let s = 0;\r\n      this.postDetails?.data.forEach(async (item, i) => {\r\n        const uniqueId = item.editable ? this.dataset[s]?.id || Math.random().toString(36).substr(2, 9) : Math.random().toString(36).substr(2, 9);\r\n        switch (true) {\r\n          case !!item.text:\r\n            if (item.text) {\r\n              const t = this.renderer.createElement('text', 'http://www.w3.org/2000/svg');\r\n              let { x, y, fs, fw, text, type, controlName, api, lang, dependency, color, fontStyle, rotate, fontFamily, textShadow, backgroundColor, textEffects, textAnchor, alignmentBaseline, letterSpacing, lineHeight, textTransformation, originX, originY, opacity } = item.text;\r\n              if (text) {\r\n                const lines = this.textFormat(text);\r\n                item.editable && this.renderer.setStyle(t, 'pointer-events', 'none');\r\n                if (lines.length === 1) {\r\n                  const textElement = this.renderer.createText(text)\r\n                  if (controlName && lang && type && type == \"select\") {\r\n                    this.selectData[controlName] = {\r\n                      lang: lang,\r\n                      value: text,\r\n                      api: api as string,\r\n                      dependency: dependency || 'none',\r\n                      text: textElement,\r\n                    }\r\n                  }\r\n                  this.renderer.appendChild(t, textElement);\r\n                } else {\r\n                  // Calculate dy offset based on font size\r\n                  const dyOffset = fs * lineHeight || 0;\r\n\r\n                  // Calculate dx offset based on text-anchor\r\n                  let dxOffset = 0;\r\n                  switch (textAnchor) {\r\n                    case 'middle':\r\n                      // For middle alignment, calculate the total width of the text and divide by 2\r\n                      const totalWidth = lines.reduce((sum, line) => sum + this.getTextWidth(line, fs, fontFamily), 0);\r\n                      dxOffset = totalWidth / 2;\r\n                      break;\r\n                    case 'end':\r\n                      // For end alignment, calculate the total width of the text\r\n                      dxOffset = lines.reduce((maxWidth, line) => {\r\n                        const lineWidth = this.getTextWidth(line, fs, fontFamily);\r\n                        return lineWidth > maxWidth ? lineWidth : maxWidth;\r\n                      }, 0);\r\n                      break;\r\n                    // For start alignment, dxOffset remains 0\r\n                  }\r\n                  // Iterate over each line of text\r\n                  lines.forEach((line, index) => {\r\n                    // Create a tspan element for each line\r\n                    const tspanElement = this.renderer.createElement('tspan', 'http://www.w3.org/2000/svg');\r\n\r\n                    // Set text content\r\n                    this.renderer.appendChild(tspanElement, this.renderer.createText(line));\r\n\r\n                    // Apply dy offset\r\n                    if (index > 0 || (index === 0 && line.trim() === '')) {\r\n                      this.renderer.setAttribute(tspanElement, 'dy', `${dyOffset}px`);\r\n                    }\r\n                    this.renderer.setAttribute(tspanElement, 'x', x.toString());\r\n                    // Apply dx offset based on text-anchor\r\n                    switch (textAnchor) {\r\n                      case 'middle':\r\n                        // For middle alignment, set dx to half of the total width\r\n                        this.renderer.setAttribute(tspanElement, 'dx', `-${dxOffset}px`);\r\n                        break;\r\n                      case 'end':\r\n                        // For end alignment, set dx to the total width\r\n                        this.renderer.setAttribute(tspanElement, 'dx', `-${dxOffset}px`);\r\n                        break;\r\n                      // For start alignment, dx remains 0\r\n                    }\r\n\r\n                    // Append tspan to text element\r\n                    this.renderer.appendChild(t, tspanElement);\r\n                  });\r\n                }\r\n              }\r\n\r\n              // switch (fontFamily) {\r\n              //   case \"Hind Vadodara\":\r\n              //     let f = \"Hind_Vadodara/\"\r\n              //     let a: boolean = false;\r\n              //     switch (fw) {\r\n              //       case '300':\r\n              //         f += 'HindVadodara-Light';\r\n              //         a = true;\r\n              //         break;\r\n              //       case '400':\r\n              //         f += 'HindVadodara-Regular';\r\n              //         a = true;\r\n              //         break;\r\n              //       case '500':\r\n              //         f += 'HindVadodara-Medium';\r\n              //         a = true;\r\n              //         break;\r\n              //       case '600':\r\n              //         f += 'HindVadodara-SemiBold';\r\n              //         a = true;\r\n              //         break;\r\n              //       case '700':\r\n              //         f += 'HindVadodara-Bold';\r\n              //         a = true;\r\n              //         break;\r\n\r\n              //       default:\r\n              //         break;\r\n              //     }\r\n              //     if (a) { fontLink = f }\r\n\r\n              //     break;\r\n\r\n              //   default:\r\n              //     break;\r\n              // }\r\n\r\n              let textAttributes: Record<string, string> = {\r\n                'data-type': 'text',\r\n                'x': x.toString(),\r\n                'y': y.toString(),\r\n                'font-size': fs.toString(),\r\n                'fill': color || '#000000', // Set default fill color to black if not provided\r\n                'text-anchor': textAnchor || 'start',\r\n                'alignment-baseline': alignmentBaseline || 'middle',\r\n                'dominant-baseline': 'reset-size',\r\n                'font-family': fontFamily ? \"'\" + fontFamily + \"', sans-serif\" : \"'Hind Vadodara', sans-serif\",\r\n                'font-weight': fw || 'normal',\r\n                'text-decoration': fontStyle.underline ? 'underline' : 'none',\r\n                'font-style': fontStyle.italic ? 'italic' : 'normal',\r\n                'opacity': opacity ? opacity.toString() : '100',\r\n              };\r\n              if (backgroundColor) {\r\n                textAttributes['background-color'] = backgroundColor;\r\n              }\r\n              if (textEffects) {\r\n\r\n              }\r\n              // Apply other text styles\r\n              let textStyles: Record<string, string> = {\r\n                '-webkit-user-select': 'none',\r\n                'letter-spacing': letterSpacing ? `${letterSpacing}px` : 'normal',\r\n                'line-height': lineHeight ? `${lineHeight}` : 'normal',\r\n                'text-transform': textTransformation || 'none'\r\n              };\r\n              if (textShadow.enable) {\r\n                textAttributes['filter'] = `drop-shadow(${textShadow.offsetX}px ${textShadow.offsetY}px ${textShadow.blur}px ${textShadow.color})` || 'none'\r\n              }\r\n              Object.entries(textAttributes).forEach(([key, value]) => this.renderer.setAttribute(t, key, value));\r\n              Object.entries(textStyles).forEach(([key, value]) => this.renderer.setStyle(t, key, value));\r\n\r\n              this.renderer.setAttribute(t, 'data-id', uniqueId);\r\n              if (rotate || (originX !== undefined && originY !== undefined)) {\r\n                const bbox = t.getBBox();\r\n                const width = bbox.width;\r\n                const height = bbox.height;\r\n                const transformValue = `rotate(${rotate || 0} ${x + width / 2} ${y + height / 2})`;\r\n                this.renderer.setAttribute(t, 'transform', transformValue);\r\n              }\r\n              if (this.dataset[s] == undefined && item.editable) { this.dataset.push({ id: uniqueId, lang: lang || 'en', value: text || 'Select ' + item.title + '', index: i.toString(), type: type, title: item.title, controlName: controlName, api: api, dependency: dependency }); }\r\n              this.renderer.appendChild(svg, t);\r\n              this.renderer.addClass(t, 'pointer-events-none');\r\n              item.editable && this.renderer.listen(t, 'click', () => {\r\n                this.selectedIndex = i;\r\n                this.selectedID = uniqueId;\r\n                this.setText();\r\n              });\r\n              // const fontLink = this.getFontPath(fontFamily, fw) || 'Hind_Vadodara/HindVadodara-Regular';\r\n              // await this.loadFont(`assets/fonts/${fontLink}.ttf`)\r\n              if (item.editable) {\r\n                s++;\r\n              } else {\r\n              }\r\n            }\r\n            break;\r\n          case !!item.rect:\r\n            if (item.rect) {\r\n              const rect = this.Rect.createRect(item.rect);\r\n              this.renderer.appendChild(svg, rect);\r\n              return rect;\r\n            }\r\n            break;\r\n          case !!item.circle:\r\n            if (item.circle) {\r\n              const c = this.Circle.createCircle(item.circle);\r\n              this.renderer.appendChild(svg, c);\r\n              return c;\r\n            }\r\n            break;\r\n          case !!item.ellipse:\r\n            if (item.ellipse) {\r\n              const e = this.Ellipse.createEllipse(item.ellipse);\r\n              this.renderer.appendChild(svg, e);\r\n              return e;\r\n            }\r\n            break;\r\n          case !!item.image:\r\n            if (item.image) {\r\n              const { x, y, r, imageUrl, borderColor, borderWidth, shape, origin, placeholder, svgProperties, rotate } = item.image;\r\n              const { w, h } = this.commonService.calculateWH(item.image)\r\n              let element: any;\r\n              switch (shape) {\r\n                case 'circle':\r\n                  element = this.renderer.createElement('circle', 'http://www.w3.org/2000/svg');\r\n                  this.renderer.setAttribute(element, 'cx', String(x));\r\n                  this.renderer.setAttribute(element, 'cy', String(y));\r\n                  this.renderer.setAttribute(element, 'r', String(r));\r\n                  this.renderer.setAttribute(element, 'data-type', 'circle');\r\n                  break;\r\n                case 'ellipse':\r\n                  element = this.renderer.createElement('ellipse', 'http://www.w3.org/2000/svg');\r\n                  this.renderer.setAttribute(element, 'cx', String(x));\r\n                  this.renderer.setAttribute(element, 'cy', String(y));\r\n                  this.renderer.setAttribute(element, 'rx', String(r));\r\n                  this.renderer.setAttribute(element, 'ry', String(r));\r\n                  this.renderer.setAttribute(element, 'data-type', 'ellipse');\r\n                  break;\r\n                case 'rect':\r\n                case 'rect_3_2':\r\n                case 'rect_4_3':\r\n                case 'rect_16_9':\r\n                case 'rect_1_1':\r\n                case 'rect_5_4':\r\n                case 'rect_3_1':\r\n                case 'rect_7_5':\r\n                case 'rect_2_3':\r\n                case 'rect_3_4':\r\n                case 'rect_9_16':\r\n                case 'rect_4_5':\r\n                case 'rect_5_7':\r\n                  element = this.renderer.createElement('rect', 'http://www.w3.org/2000/svg');\r\n                  this.renderer.setAttribute(element, 'x', String(x)); // X coordinate\r\n                  this.renderer.setAttribute(element, 'y', String(y)); // Y coordinate\r\n                  this.renderer.setAttribute(element, 'width', String(w)); // Width\r\n                  this.renderer.setAttribute(element, 'height', String(h)); // Height\r\n                  this.renderer.setAttribute(element, 'data-type', 'rect');\r\n                  this.renderer.setAttribute(element, 'fill', '#FFF');\r\n                  break;\r\n                default:\r\n                  console.error('Invalid shape');\r\n                  return null;\r\n              }\r\n              if (element !== null) {\r\n                // Set common attributes for all shapes\r\n                const id = uniqueId;\r\n                this.renderer.addClass(element, 'pointer-events-none');\r\n                this.renderer.setAttribute(element, 'fill', 'url(#' + id + ')');\r\n                item.editable && this.renderer.setStyle(element, 'pointer-events', 'none');\r\n                this.renderer.setStyle(element, 'filter', 'url(#shadow)');\r\n                const imagePattern = this.renderer.createElement('pattern', 'http://www.w3.org/2000/svg');\r\n                this.renderer.setAttribute(imagePattern, 'id', id);\r\n                this.renderer.setAttribute(imagePattern, 'x', '0');\r\n                this.renderer.setAttribute(imagePattern, 'y', '0');\r\n                this.renderer.setAttribute(imagePattern, 'height', '100%');\r\n                this.renderer.setAttribute(imagePattern, 'width', '100%');\r\n                this.renderer.setAttribute(imagePattern, 'viewBox', '0 0 ' + String(w) + ' ' + String(h));\r\n                this.renderer.setAttribute(element, 'data-id', uniqueId);\r\n                if (this.dataset[s] == undefined && item.editable) { this.dataset.push({ id: uniqueId, value: '', index: i.toString(), type: 'image', title: item.title }); }\r\n                item.editable && this.renderer.listen(element, 'click', () => {\r\n                  this.selectedIndex = i;\r\n                  this.selectedID = uniqueId;\r\n                  this.setImage();\r\n                });\r\n                const image = this.renderer.createElement('image', 'http://www.w3.org/2000/svg');\r\n                this.renderer.setAttribute(image, 'x', '0');\r\n                this.renderer.setAttribute(image, 'y', '0');\r\n                this.renderer.setAttribute(image, 'width', String(w));\r\n                this.renderer.setAttribute(image, 'height', String(h));\r\n                this.renderer.setAttribute(image, 'href', imageUrl);\r\n\r\n                const extraRect = this.renderer.createElement('rect', 'http://www.w3.org/2000/svg');\r\n                this.renderer.setAttribute(extraRect, 'x', '0'); // X coordinate\r\n                this.renderer.setAttribute(extraRect, 'y', '0'); // Y coordinate\r\n                this.renderer.setAttribute(extraRect, 'width', String(w)); // Width\r\n                this.renderer.setAttribute(extraRect, 'height', String(h)); // Height\r\n                this.renderer.setAttribute(extraRect, 'fill', '#FFFFFF');\r\n\r\n                item.editable && this.renderer.appendChild(imagePattern, extraRect);\r\n\r\n                this.renderer.appendChild(imagePattern, image);\r\n                this.renderer.appendChild(svg, imagePattern);\r\n\r\n                // Apply border if needed\r\n                if (borderWidth && borderColor) {\r\n                  this.renderer.setAttribute(element, 'stroke', borderColor);\r\n                  this.renderer.setAttribute(element, 'stroke-width', String(borderWidth));\r\n                }\r\n\r\n                // Apply SVG properties if provided\r\n                // if (svgProperties) {\r\n                //   Object.keys(svgProperties).forEach(key => {\r\n                //     const propertyKey = key as keyof SvgProperties;\r\n                //     const attributeValue = svgProperties[propertyKey];\r\n                //     this.renderer.setAttribute(element!, propertyKey, String(attributeValue));\r\n                //   });\r\n                // }\r\n                this.renderer.appendChild(svg, element);\r\n                if (rotate || (x !== undefined && y !== undefined)) {\r\n                  const bbox = element.getBBox();\r\n                  const width = bbox.width;\r\n                  const height = bbox.height;\r\n                  const transformValue = `rotate(${rotate || 0} ${x + width / 2} ${y + height / 2})`;\r\n                  this.renderer.setAttribute(element, 'transform', transformValue);\r\n                }\r\n                if (item.editable) {\r\n                  s++;\r\n                } else {\r\n                }\r\n                return element as any;\r\n              }\r\n            }\r\n            break;\r\n          default:\r\n            console.log('Element data not found');\r\n            break;\r\n        }\r\n      })\r\n    }\r\n    this.downloaded = false;\r\n    this.canDownload = false;\r\n    this.formData.reset();\r\n    for (const key in this.selectData) {\r\n      const data = this.selectData[key];\r\n      if (data.dependency === 'none') {\r\n        await this.loadData(key, data.api);\r\n      } else {\r\n        await this.setupDependency(key, data);\r\n      }\r\n      const filteredData = this.apiData[key].filter(item => item.id == data.value);\r\n      if (filteredData.length) {\r\n        this.renderer.setValue(data.text, filteredData[0][data.lang == 'gu' ? 'gu_name' : 'name'])\r\n      }\r\n    }\r\n  }\r\n  async buildForm() {\r\n    Object.keys(this.formData.controls).forEach(key => {\r\n      this.formData.get(key) && this.formData.removeControl(key);\r\n    });\r\n    const selectData: { [key: string]: { title: string, control: FormControl, api: string, dependency: string } } = {};\r\n    this.dataset.forEach(field => {\r\n      const index = parseInt(field.index, 10);\r\n      if (!isNaN(index) && this.postDetails?.data) {\r\n        if (field.type === 'text') {\r\n          const textData = this.postDetails.data.filter((_, i) => i === index)[0]?.text;\r\n          if (textData) {\r\n            this.formData.addControl(field.id, this.fb.control('', Validators.required));\r\n            this.formData.get(field.id)?.valueChanges.subscribe((v) => {\r\n              textData.text = v;\r\n              field.value = v;\r\n            });\r\n          }\r\n        } else if (field.type === 'select') {\r\n          const textData = this.postDetails.data.filter((_, i) => i === index)[0]?.text;\r\n          if (textData) {\r\n            const c = this.formData.addControl(field.id, this.fb.control(field.value, Validators.required));\r\n            this.formData.get(field.id)?.valueChanges.subscribe((v) => {\r\n              textData.text = v;\r\n              field.value = v;\r\n            });\r\n            if (field.dependency && field.controlName && field.api) {\r\n              selectData[field.controlName] = {\r\n                title: field.title,\r\n                control: this.formData.get(field.id) as FormControl,\r\n                api: field.api,\r\n                dependency: field.dependency,\r\n              }\r\n            }\r\n          }\r\n        } else if (field.type === 'image') {\r\n          const textData = this.postDetails.data.filter((_, i) => i === index)[0]?.image;\r\n          if (textData) {\r\n            this.formData.addControl(field.id, this.fb.control('', Validators.required));\r\n            this.formData.addControl(field.id + '-file', this.fb.control('', Validators.required));\r\n            this.formData.get(field.id)?.valueChanges.subscribe((v) => {\r\n              textData.imageUrl = v;\r\n              field.value = v;\r\n            });\r\n          }\r\n        }\r\n      }\r\n    });\r\n    for (const key in selectData) {\r\n      const s = selectData[key]\r\n      if (selectData[key].dependency !== 'none' && selectData[selectData[key].dependency].control) {\r\n        selectData[selectData[key].dependency].control.valueChanges.subscribe(async value => {\r\n          const dependentApi = `${s.api}${value}`;\r\n          await this.fetchDataFromAPI(dependentApi, key);\r\n        })\r\n      }\r\n    }\r\n  }\r\n  textFormat(text: string): string[] {\r\n    const formattedText = text.replace(/\\n/g, '\\n').replace(/\\n(?!\\*{3})/g, '***\\n');\r\n    const lines = formattedText.split('\\n');\r\n    for (let i = 0; i < lines.length; i++) {\r\n      lines[i] = lines[i].replace(/\\*\\*\\*/g, '\\u00A0');\r\n    }\r\n    return lines;\r\n  }\r\n  getTextWidth(text: string, fontSize: number, fontFamily: string): number {\r\n    const svgText = document.createElementNS('http://www.w3.org/2000/svg', 'text');\r\n    svgText.setAttribute('font-size', `${fontSize}px`);\r\n    svgText.setAttribute('font-family', `fontFamily`);\r\n    svgText.textContent = text;\r\n    document.body.appendChild(svgText);\r\n    const width = svgText.getBBox().width;\r\n    document.body.removeChild(svgText);\r\n    return width;\r\n  }\r\n  setText() {\r\n    this.inputTextForm.reset();\r\n    const i = this.selectedIndex;\r\n    if (i !== null) {\r\n      const t = this.postDetails?.data[i].text?.text;\r\n      const dt = this.postDetailsDefault?.data[i].text?.text;\r\n      let v = (t == dt) ? '' : t;\r\n      this.inputTextForm.get('text')?.setValue(v);\r\n      this.textInput.nativeElement.placeholder = dt;\r\n      this.textModalTitle = this.postDetails?.data[i].title || undefined;\r\n      this.textModal.show();\r\n    }\r\n  }\r\n  setImage() {\r\n    this.inputImageForm.reset();\r\n    const i = this.selectedIndex;\r\n    if (i !== null) {\r\n      const t = this.postDetails?.data[i].image?.imageUrl;\r\n      const dt = this.postDetailsDefault?.data[i].image?.imageUrl;\r\n      let v = (t == dt) ? dt : t;\r\n      this.inputImageForm.get('image')?.setValue(v);\r\n      this.cropperModalTitle = this.postDetails?.data[i].title || undefined;\r\n      this.cropperModal.show();\r\n    }\r\n  }\r\n  private async loadData(key: string, api: string) {\r\n    if (!this.apiData[key]) {\r\n      await this.fetchDataFromAPI(api, key);\r\n    }\r\n  }\r\n  private async setupDependency(key: string, data: { lang: string, value: string, api: string, dependency: string }) {\r\n    if (!data.api.endsWith('/')) {\r\n      data.api += '/';\r\n    }\r\n    const dependencyKey = data.dependency;\r\n    const dependencyControl = this.selectData[dependencyKey].value;\r\n    const dependentApi = `${data.api}${dependencyControl}`;\r\n    await this.fetchDataFromAPI(dependentApi, key);\r\n  }\r\n  async fetchDataFromAPI(apiUrl: string, controlName: string): Promise<void> {\r\n    try {\r\n      const data = await this.http.get<any[]>(apiUrl).toPromise();\r\n      if (controlName && data) { this.apiData[controlName] = data; } else { this.apiData[controlName] = [] }\r\n    } catch (error) {\r\n      console.error('Error fetching data from API:', error);\r\n    }\r\n  }\r\n  async onSubmitFormData() {\r\n    this.commonService.markFormGroupTouched(this.formData);\r\n    if (this.formData.valid) {\r\n      this.dataset.forEach(field => {\r\n        const index = parseInt(field.index, 10);\r\n        if (!isNaN(index) && this.postDetails?.data) {\r\n          if (field.type === 'text') {\r\n            const textData = this.postDetails.data.filter((_, i) => i === index)[0]?.text;\r\n            if (textData) {\r\n              textData.text = field.value;\r\n              this.canDownload = false;\r\n            }\r\n          } else if (field.type === 'image') {\r\n            const imageData = this.postDetails.data.filter((_, i) => i === index)[0]?.image;\r\n            if (imageData) {\r\n              imageData.imageUrl = field.value;\r\n              this.canDownload = false;\r\n            }\r\n          }\r\n        }\r\n      });\r\n      await this.drawSVG();\r\n      this.canDownload = true;\r\n      this.formData.reset();\r\n    }\r\n  }\r\n  onFileChange(event: any, fieldName: string, index: string): void {\r\n    const i = parseInt(index, 10)\r\n    if (event.target.files.length > 0) {\r\n\r\n      const file = event.target.files[0];\r\n      const fileType = file.type;\r\n      if (fileType.startsWith('image/')) {\r\n        if (fileType === 'image/jpeg' || fileType === 'image/png' || fileType === 'image/gif' || fileType === 'image/bmp' || fileType === 'image/webp' || fileType === 'image/svg+xml' || fileType === 'image/tiff') {\r\n          const reader = new FileReader();\r\n          reader.onload = (e) => {\r\n            const imageSrc = e.target?.result as string;\r\n            this.imageCropper.show();\r\n            // Initialize Cropper\r\n            const imageData = this.postDetails?.data[i].image;\r\n            let h = 320;\r\n            let w = 320;\r\n            let cH = 320;\r\n            let cW = 320;\r\n            console.log(this.postDetails?.data, index)\r\n            if (this.postDetails?.data[i].image) {\r\n              const newWH = this.commonService.calculateWH(imageData as ImageElement)\r\n              w = newWH.w;\r\n              h = newWH.h;\r\n            }\r\n            const cropperElement = document.getElementById('imageToCropped') as HTMLImageElement;\r\n            this.cropper = new Cropper(cropperElement, {\r\n\r\n              scalable: true,\r\n              viewMode: 3,\r\n              crop: (event) => {\r\n\r\n              },\r\n              autoCropArea: 1, // Ensure the initial crop area covers the entire image\r\n              dragMode: 'move', // Allow dragging to move the image within the container\r\n              responsive: true, // Update crop box on resize\r\n              cropBoxResizable: false, // Disable resizing the crop box\r\n              minCropBoxWidth: cW,\r\n              minCropBoxHeight: cH,\r\n              minContainerWidth: 320,\r\n              minContainerHeight: 320,\r\n              aspectRatio: w / h\r\n            });\r\n            this.cropper.replace(imageSrc);\r\n            this.selectedImage = fieldName;\r\n          };\r\n          reader.readAsDataURL(file);\r\n\r\n        } else {\r\n          this.toastService.show('Please select image type.', { class: 'bg-danger', title: 'Invalid Image Type' });\r\n        }\r\n      } else {\r\n        this.toastService.show('Please select valid file format.', { class: 'bg-danger', title: 'Invalid File Format' });\r\n      }\r\n\r\n\r\n    }\r\n  }\r\n  resetForm() {\r\n    this.canDownload = false;\r\n    this.formData.reset();\r\n  }\r\n  async checkDownload(t: string): Promise<boolean> {\r\n    const baseUrl = `${this.baseUrl}poster?img=${this.postDetails?.id}`;\r\n    const title = this.postDetails?.title.trim();\r\n    const info = this.postDetails?.info.trim();\r\n    switch (t) {\r\n      case 'download':\r\n        this.capturePhoto();\r\n        break;\r\n      case 'whatsapp':\r\n        const whatsappUrl = `*${baseUrl}*\\n\\n*${title}*\\n*_${info}_*\\n\\nપોસ્ટર બનાવવા ઉપરની લિંક ક્લિક કરો\\nઅન્ય સબંધિત વ્યક્તિ ને પણ શેર કરો.`;\r\n        window.location.href = `whatsapp://send?text=${encodeURIComponent(whatsappUrl)}`;\r\n        break;\r\n      case 'facebook':\r\n        const q = this.postDetails?.title + \" \" + this.postDetails?.info;\r\n        const shareDialogUrl = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(baseUrl)}&quote=${encodeURIComponent(q)}`;\r\n        window.open(shareDialogUrl, '_blank');\r\n        break;\r\n      default:\r\n        this.capturePhoto();\r\n        break;\r\n    }\r\n    return true\r\n  }\r\n  async capturePhoto(share?: boolean) {\r\n    this.loaderService.show(0);\r\n    const svgElement = this.imageDraw.nativeElement;\r\n    const viewBoxAttr = svgElement.getAttribute('viewBox') || '';\r\n    const viewBoxValues = viewBoxAttr.split(' ').map(Number);\r\n    const viewBoxWidth = viewBoxValues[2];\r\n    const viewBoxHeight = viewBoxValues[3];\r\n\r\n    // Create a new canvas element\r\n    const canvas = document.createElement('canvas');\r\n    const context = canvas.getContext('2d');\r\n\r\n    // Set canvas dimensions to match the viewBox dimensions\r\n    canvas.width = viewBoxWidth;\r\n    canvas.height = viewBoxHeight;\r\n    const image = new Image();\r\n\r\n    // Create a new XMLSerializer object to serialize the SVG element\r\n    const serializer = new XMLSerializer();\r\n\r\n    const fontFamilies = this.getFontStylesFromSVG(svgElement);\r\n    await this.loadFonts(fontFamilies);\r\n    const svgString = serializer.serializeToString(svgElement);\r\n    image.src = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(svgString)));\r\n    image.onload = async () => {\r\n      context?.drawImage(image, 0, 0);\r\n      const dataURL = canvas.toDataURL('image/png');\r\n      const timestamp = new Date().toISOString().replace(/:/g, '-');\r\n      const fileName = `IMG-${timestamp}.png`;\r\n      const link = document.createElement('a');\r\n      link.href = dataURL;\r\n      this.finalImage = dataURL;\r\n      link.download = fileName;\r\n      const textElements = svgElement.querySelectorAll('text');\r\n      context && textElements.forEach(text => {\r\n        const fontFamily = text.getAttribute('font-family') || 'Arial'; // Default to Arial if font-family is not specified\r\n        const fontSize = parseFloat(text.getAttribute('font-size') || '16'); // Default font size to 16 if not specified\r\n        context.font = `${fontSize}px ${fontFamily}`;\r\n      });\r\n      this.downloaded = true;\r\n      !share && link.click();\r\n      !this.downloaded && await this.PS.updateDownloadCounter(this.imgParam)\r\n        .subscribe(\r\n          post => {\r\n            if (post) {\r\n              const p = JSON.parse(JSON.stringify(post));\r\n              this.postStatus = 'Total Download: ' + post.download_counter;\r\n            } else {\r\n\r\n            }\r\n          },\r\n          error => {\r\n            this.postStatus = undefined;\r\n            console.error('Error fetching post:', error);\r\n          }\r\n        )\r\n      this.loaderService.hide();\r\n    };\r\n  }\r\n  getFontStylesFromSVG(svgElement: SVGElement | HTMLElement): FontStyles {\r\n    const textElements = svgElement.querySelectorAll('text');\r\n    const fontStyles: FontStyles = {}; // Initialize as an empty object\r\n    textElements.forEach(text => {\r\n      const fontFamily = text.getAttribute('font-family');\r\n      const fontWeight = text.getAttribute('font-weight') || 'normal'; // Default to 'normal' if font-weight is not specified\r\n      if (fontFamily) {\r\n        // Extract font family name from the attribute value\r\n        const fontFamilyName = fontFamily.split(',')[0].replace(/['\"]/g, '').trim(); // Remove single or double quotes and extra spaces\r\n        if (!fontStyles[fontFamilyName]) {\r\n          fontStyles[fontFamilyName] = new Set<string>();\r\n        }\r\n        fontStyles[fontFamilyName].add(fontWeight);\r\n      }\r\n    });\r\n    return fontStyles;\r\n  }\r\n  async loadFonts(fontStyles: FontStyles) {\r\n    const svg = this.imageDraw.nativeElement;\r\n    let svgDefs = svg.querySelector('defs') as SVGDefsElement || svg.appendChild(document.createElementNS('http://www.w3.org/2000/svg', 'defs'));\r\n\r\n    let styleElement = svgDefs.querySelector('style') as any | null;\r\n    if (!styleElement) {\r\n      styleElement = document.createElementNS('http://www.w3.org/2000/svg', 'style');\r\n      svgDefs.appendChild(styleElement);\r\n    }\r\n\r\n    const addedRules = new Set<string>();\r\n\r\n    for (const [fontFamily, fontWeights] of Object.entries(fontStyles)) {\r\n      for (const fontWeight of fontWeights) {\r\n        const fontPath = this.fontService.getFontPath(fontFamily, fontWeight);\r\n        const fontData = await this.loadFontAsBase64(`assets/fonts/${fontPath}.ttf`);\r\n        const fontFaceRule = `@font-face {\r\n          font-family: '${fontFamily}';\r\n          font-style: normal;\r\n          font-weight: ${fontWeight};\r\n          font-stretch: 100%;\r\n          font-display: swap;\r\n          src: url(data:font/truetype;base64,${fontData}) format('truetype');\r\n        }`;\r\n\r\n        if (!addedRules.has(fontFaceRule)) {\r\n          styleElement.textContent += fontFaceRule;\r\n          addedRules.add(fontFaceRule);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  async loadFontAsBase64(fontUrl: string): Promise<string> {\r\n    const response = await fetch(fontUrl);\r\n    const fontData = await response.arrayBuffer();\r\n    return btoa(new Uint8Array(fontData).reduce((data, byte) => data + String.fromCharCode(byte), ''));\r\n  }\r\n  shareOnFacebook(): void {\r\n    // Call FB.ui to trigger the Feed Dialog\r\n    (window as any).FB.ui({\r\n      method: 'feed',\r\n      link: this.pageLink\r\n    });\r\n  }\r\n  async onTextSubmit() {\r\n    if (this.selectedIndex !== null && this.postDetails?.data) {\r\n      this.postDetails.data = this.postDetails.data.map((item, index) => {\r\n        if (index === this.selectedIndex && item.text) {\r\n          let v = this.inputTextForm.get('text')?.value;\r\n          if (this.selectedID) {\r\n            const elementToChange = this.elementRef.nativeElement.querySelector(`[data-id=\"${this.selectedID}\"]`);\r\n            if (elementToChange) {\r\n              const filteredItems = this.dataset.filter(item => item.id === this.selectedID);\r\n              if (filteredItems[0]) {\r\n                filteredItems[0].value = v || item.text.text;\r\n              }\r\n            }\r\n          }\r\n          return { ...item, text: { ...item.text, text: v } };\r\n        }\r\n        return item;\r\n      });\r\n    }\r\n    await this.drawSVG();\r\n    this.textModal.hide();\r\n  }\r\n  handleImageInputChange(event: Event): void {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const file = inputElement.files?.[0];\r\n    if (file) {\r\n      const fileType = file.type;\r\n      if (fileType.startsWith('image/')) {\r\n        // The file is an image\r\n        if (fileType === 'image/jpeg' || fileType === 'image/png' || fileType === 'image/gif' || fileType === 'image/bmp' || fileType === 'image/webp' || fileType === 'image/svg+xml' || fileType === 'image/tiff') {\r\n\r\n          const reader = new FileReader();\r\n          reader.onload = (e) => {\r\n            const imageSrc = e.target?.result as string;\r\n            // Open Bootstrap modal dialog with Cropper\r\n            const selectedItem = this.dataset.find(item => item.id === this.selectedImage);\r\n            let w = 320;\r\n            let h = 320;\r\n            let cW = 320;\r\n            let cH = 320;\r\n            if (selectedItem) {\r\n              const index = parseInt(selectedItem.index, 10);\r\n              if (this.postDetails?.data[index].image) {\r\n                const newWH = this.commonService.calculateWH(this.postDetails?.data[index].image as ImageElement)\r\n                w = newWH.w;\r\n                h = newWH.h;\r\n              }\r\n            }\r\n            this.cropperModal.show();\r\n            // Initialize Cropper\r\n            const cropperElement = document.getElementById('cropper') as HTMLImageElement;\r\n            this.cropper = new Cropper(cropperElement, {\r\n\r\n              scalable: true,\r\n              viewMode: 3, // Ensure the crop box is always within the container\r\n              crop: (event) => {\r\n\r\n              },\r\n              autoCropArea: 1, // Ensure the initial crop area covers the entire image\r\n              dragMode: 'move', // Allow dragging to move the image within the container\r\n              responsive: true, // Update crop box on resize\r\n              cropBoxResizable: false, // Disable resizing the crop box\r\n              minCropBoxWidth: cW,\r\n              minCropBoxHeight: cH,\r\n              minContainerWidth: 320,\r\n              minContainerHeight: 320,\r\n              aspectRatio: w / h\r\n            });\r\n            this.cropper.replace(imageSrc);\r\n          };\r\n          reader.readAsDataURL(file);\r\n\r\n        } else {\r\n          this.toastService.show('Please select image type.', { class: 'bg-danger', title: 'Invalid Image Type' });\r\n        }\r\n      } else {\r\n        this.toastService.show('Please select valid file format.', { class: 'bg-danger', title: 'Invalid File Format' });\r\n      }\r\n    }\r\n\r\n    if (file && (file.type === 'image/jpeg' || file.type === 'image/png')) { } else {\r\n    }\r\n  }\r\n  async onImageSubmit() {\r\n    this.handleCropEvent()\r\n    if (this.selectedIndex !== null && this.postDetails?.data) {\r\n      this.postDetails.data = this.postDetails.data.map((item, index) => {\r\n        if (index === this.selectedIndex && item.image) {\r\n          let v = this.inputImageForm.get('image')?.value;\r\n          if (this.selectedID) {\r\n            const elementToChange = this.elementRef.nativeElement.querySelector(`[data-id=\"${this.selectedID}\"]`);\r\n            if (elementToChange) {\r\n              const filteredItems = this.dataset.filter(item => item.id === this.selectedID);\r\n              if (filteredItems[0]) {\r\n                filteredItems[0].value = v || item.image.imageUrl;\r\n              }\r\n            }\r\n          }\r\n          return { ...item, image: { ...item.image, imageUrl: v } };\r\n        }\r\n        return item;\r\n      });\r\n    }\r\n    await this.drawSVG();\r\n    this.cropperModal.hide();\r\n  }\r\n  handleCropEvent(): void {\r\n    if (this.cropper) {\r\n      const selectedItem = this.dataset.find(item => item.id === this.selectedImage);\r\n      let w = 800;\r\n      let h = 800;\r\n      if (selectedItem) {\r\n        const index = parseInt(selectedItem.index, 10);\r\n        if (this.postDetails?.data[index].image) {\r\n          const newWH = this.commonService.calculateWH(this.postDetails?.data[index].image as ImageElement)\r\n          w = newWH.w;\r\n          h = newWH.h;\r\n        }\r\n      }\r\n      const croppedCanvas = this.cropper.getCroppedCanvas();\r\n      const resizedCanvas = document.createElement('canvas');\r\n      const resizedContext = resizedCanvas.getContext('2d')!;\r\n      resizedCanvas.width = w;\r\n      resizedCanvas.height = h;\r\n      resizedContext.drawImage(croppedCanvas, 0, 0, w, h);\r\n      const resizedImageData = resizedCanvas.toDataURL('image/png'); // Adjust format as needed\r\n      this.inputImageForm.get('image')?.setValue(resizedImageData);\r\n    }\r\n  }\r\n  openImageCropperDialog(): void {\r\n    const inputElement = this.imageInput.nativeElement;\r\n    if (inputElement) {\r\n      inputElement.click(); // Trigger click on the hidden file input\r\n      inputElement.value = null;\r\n    }\r\n    this.cropperModal.hide();\r\n  }\r\n  handleSelectedEvent(): void {\r\n    if (this.cropper) {\r\n      const selectedItem = this.dataset.find(item => item.id === this.selectedImage);\r\n      let w = 800;\r\n      let h = 800;\r\n      if (selectedItem) {\r\n        const index = parseInt(selectedItem.index, 10);\r\n        if (this.postDetails?.data[index].image) {\r\n          const newWH = this.commonService.calculateWH(this.postDetails?.data[index].image as ImageElement)\r\n          w = newWH.w;\r\n          h = newWH.h;\r\n        }\r\n      }\r\n      const croppedCanvas = this.cropper.getCroppedCanvas();\r\n      const resizedCanvas = document.createElement('canvas');\r\n      const resizedContext = resizedCanvas.getContext('2d')!;\r\n      resizedCanvas.width = w;\r\n      resizedCanvas.height = h;\r\n      resizedContext.drawImage(croppedCanvas, 0, 0, w, h);\r\n      const resizedImageData = resizedCanvas.toDataURL('image/png');\r\n      if (selectedItem) {\r\n        const index = parseInt(selectedItem.index, 10); // Parse index to integer\r\n        if (!isNaN(index) && this.postDetails?.data) {\r\n          this.formData.get(this.selectedImage)?.setValue(resizedImageData);\r\n          this.imageCropper.hide();\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n", "<div class=\"h-100-vh d-flex flex-column\">\r\n    <ng-container *ngIf=\"this.postDetails\">\r\n        <h1 class=\"text-center my-4 fw-b h5\" *ngIf=\"this.postDetails.title\">{{this.postDetails.title}}</h1>\r\n        <h2 class=\"text-center mb-4 lh-base h6\" *ngIf=\"this.postDetails.info\">{{this.postDetails.info}}</h2>\r\n        <ng-container *ngIf=\"postStatus!=='loading'&&isDeleted==false\">\r\n            <h5 class=\"text-center mb-4\"><b>{{postStatus}}</b></h5>\r\n        </ng-container>\r\n    </ng-container>\r\n    <!-- <div class=\"d-flex align-items-center justify-content-center p-2 mb-3 bg-light\" *ngIf=\"postStatus && !isDeleted\">\r\n        <div class=\"fb-share-button mb-2\" [attr.data-href]=\"pageLink\" data-layout=\"\" data-size=\"\"></div>\r\n    </div> -->\r\n    <div class=\"flex-grow-1 position-relative overflow-hidden mb-4 min-h-600-px mx-3\">\r\n        <div class=\"position-absolute h-100 w-100 text-center d-flex align-items-center justify-content-center overflow-auto flex-column\" id=\"canvas-container\">\r\n            <svg #imageDraw class=\"max-w-100 max-h-100 border\" [ngClass]=\"{'d-none':!postStatus && isDeleted}\"></svg>\r\n            <img class=\"max-w-100 max-h-100 rounded-4\" *ngIf=\"!postStatus || isDeleted\" src=\"./assets/images/svg/no-post.svg\" />\r\n            <div *ngIf=\"postStatus=='loading'\">Loading</div>\r\n            <a class=\"btn btn-success btn-md w-auto m-3\" href=\"https://whatsapp.com/channel/0029VaePspU1iUxd0HOsMA1d\" target=\"_blank\"><i class=\"fa fa-whatsapp me-2\"></i>Join Gujarat Info Channel</a>\r\n        </div>\r\n    </div>\r\n    <div class=\"container\">\r\n        <form [formGroup]=\"formData\" (ngSubmit)=\"onSubmitFormData()\" *ngIf=\"!canDownload && dataset.length\" class=\"row g-2\">\r\n            <div *ngFor=\"let field of dataset;let i=index\" class=\"form-group col-lg-4 offset-lg-4  col-sm-8 offset-sm-2 col-12 offset-0\">\r\n                <ng-container *ngIf=\"field.type === 'text'\">\r\n                    <label class=\"form-label\" for=\"{{field.id}}\">{{field.title}}</label>\r\n                    <input class=\"form-control\" type=\"text\" id=\"{{field.id}}\" name=\"{{field.id}}\" formControlName=\"{{field.id}}\" [placeholder]=\"field.title\">\r\n                </ng-container>\r\n                <ng-container *ngIf=\"field.type === 'image'\">\r\n                    <label class=\"form-label\">{{field.title}}</label>\r\n                    <input type=\"hidden\" class=\"form-control\" id=\"{{field.id}}\" name=\"{{field.id}}\" formControlName=\"{{field.id}}\">\r\n                    <input type=\"file\" class=\"form-control\" id=\"{{field.id}}-file\" name=\"{{field.id}}-file\" formControlName=\"{{field.id}}-file\" (change)=\"onFileChange($event, field.id,field.index)\" accept=\"image/*\">\r\n                </ng-container>\r\n                <ng-container *ngIf=\"field.type === 'select' && field.controlName\">\r\n                    <label for=\"text\" class=\"form-label\">{{field.title}}</label>\r\n                    <select id=\"type\" class=\"form-select\" formControlName=\"{{field.id}}\">\r\n                        <option value=\"\" disabled selected>-- Select {{field.title}} --</option>\r\n                        <option *ngFor=\"let option of apiData[field.controlName]\" [value]=\"option.id\">{{ field.lang=='gu'?option.gu_name:option.name }}</option>\r\n                    </select>\r\n                </ng-container>\r\n            </div>\r\n            <div class=\"col-lg-4 offset-lg-4  col-sm-8 offset-sm-2 col-12 offset-0\">\r\n                <hr class=\"my-2\">\r\n            </div>\r\n            <div class=\"col-lg-4 offset-lg-4  col-sm-8 offset-sm-2 col-12 offset-0 d-flex\">\r\n                <!-- <button type=\"submit\" class=\"btn btn-success w-100\" [disabled]=\"!formData.valid\"><i class=\"fa fa-gear me-2\"></i> Generate Image</button> -->\r\n\r\n                <button type=\"submit\" class=\"btn btn-primary btn-md w-100 me-2 text-nowrap\"><i class=\"fa fa-gears me-2\"></i>Generate Poster</button>\r\n                <button class=\"btn btn-danger mx-auto btn-md text-nowrap\" (click)=\"resetForm()\" type=\"button\"><i class=\"fa fa-refresh\"></i></button>\r\n            </div>\r\n            <div class=\"col-lg-4 offset-lg-4 col-sm-8 offset-sm-2 col-12 offset-0\">\r\n                <hr class=\"my-2\">\r\n            </div>\r\n            <div class=\"col-lg-4 offset-lg-4 col-sm-8 offset-sm-2 col-12 offset-0 d-flex justify-content-center pb-3\">\r\n                <button class=\"btn btn-success btn-md text-nowrap me-1\" (click)=\"checkDownload('whatsapp')\" type=\"button\">\r\n                    <i class=\"fa fa-whatsapp me-2\"></i><span class=\"d-none-sm\">WhatsApp</span>\r\n                </button>\r\n                <button class=\"btn btn-primary btn-md text-nowrap ms-1\" (click)=\"shareOnFacebook()\" type=\"button\">\r\n                    <i class=\"fa fa-facebook me-2\"></i>Facebook </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    <ng-container *ngIf=\"!postStatus\">\r\n        <h5 class=\"text-center my-2 text-danger\"><b>No any post available for this link.</b></h5>\r\n    </ng-container>\r\n    <div *ngIf=\"postStatus && isDeleted==false\" class=\"position-sticky bottom-0 bg-light border-top px-3\">\r\n        <span class=\"w-100 mx-auto py-3 d-flex align-items-center justify-content-center\" *ngIf=\"this.postDetails?.info_show\">Created by <a href=\"https://www.facebook.com/SOJITRAHIREN\" class=\"fw-bold btn btn-outline-danger ms-3\" target=\"_blank\" (click)=\"myInfo.show();false\">Hiren\r\n                Sojitra</a></span>\r\n        <div class=\"container\">\r\n            <div class=\"row g-2\" *ngIf=\"canDownload\">\r\n                <div class=\"col-lg-4 offset-lg-4 col-sm-8 offset-sm-2 col-12 offset-0\">\r\n                    <div class=\"d-flex\">\r\n                        <button class=\"btn btn-primary btn-md me-1 w-100\" (click)=\"checkDownload('download')\">\r\n                            <i class=\"fa fa-download me-2\"></i>Download\r\n                        </button>\r\n                        <button class=\"btn btn-danger ms-1 btn-md text-nowrap\" (click)=\"resetForm()\">\r\n                            <i class=\"fa fa-refresh me-2\"></i>Reset\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-lg-4 offset-lg-4 col-sm-8 offset-sm-2 col-12 offset-0\">\r\n                    <hr class=\"my-2\">\r\n                </div>\r\n                <div class=\"col-lg-4 offset-lg-4  col-sm-8 offset-sm-2 col-12 offset-0 d-flex pb-3\">\r\n                    <button class=\"btn btn-success btn-md text-nowrap w-100 me-1\" (click)=\"checkDownload('whatsapp')\" type=\"button\">\r\n                        <i class=\"fa fa-whatsapp me-2\"></i><span class=\"d-none-sm\">WhatsApp</span>\r\n                    </button>\r\n                    <button class=\"btn btn-primary btn-md text-nowrap w-100 ms-1\" (click)=\"checkDownload('facebook')\" type=\"button\">\r\n                        <i class=\"fa fa-facebook me-2\"></i>Facebook\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <span class=\"w-auto mx-auto\" *ngIf=\"!this.postDetails?.info_show\"><a [routerLink]=\"'/about-us'\" class=\"text-danger fw-bold\">More Info</a></span>\r\n    </div>\r\n    <ng-container *ngIf=\"!postStatus || isDeleted\">\r\n        <span class=\"w-auto mx-auto\"><a href=\"\" class=\"text-danger fw-bold\">More Info</a></span>\r\n        <div class=\"my-3 d-flex\">\r\n            <div class=\"btn btn-md btn-danger mx-auto\" (click)=\"myInfo.show()\"><i class=\"fa fa-user me-2\"></i>Contact Us</div>\r\n        </div>\r\n    </ng-container>\r\n</div>\r\n<div class=\"modal fade\" id=\"textModal\" tabindex=\"-1\" aria-labelledby=\"textModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog  modal-dialog-centered modal-dialog-scrollable\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"textModalLabel\">{{textModalTitle}}</h5>\r\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div>\r\n            <div class=\"modal-body bg-dark\">\r\n                <form [formGroup]=\"inputTextForm\" (ngSubmit)=\"onTextSubmit()\">\r\n                    <input type=\"text\" formControlName=\"text\" class=\"form-control form-control-lg fw-bold\" #textInput>\r\n                    <div class=\"d-flex mt-4\">\r\n                        <button class=\"btn btn-primary mx-auto\" [disabled]=\"inputTextForm.invalid\" type=\"submit\"><i class=\"fa fa-save\"></i> Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"modal fade\" id=\"cropperModal\" tabindex=\"-1\" aria-labelledby=\"cropperModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog  modal-dialog-centered modal-dialog-scrollable\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"cropperModalLabel\">{{cropperModalTitle}}</h5>\r\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <img id=\"cropper\" alt=\"Crop\" class=\"w-100\" [src]=\"inputImageForm.get('image')?.value\">\r\n                <input #imageInput type=\"file\" (change)=\"handleImageInputChange($event)\" style=\"display: none\">\r\n                <form [formGroup]=\"inputImageForm\" (ngSubmit)=\"onImageSubmit()\">\r\n                    <input type=\"hidden\" formControlName=\"image\">\r\n                    <div class=\"d-flex mt-4\">\r\n                        <button class=\"btn btn-success mx-auto\" (click)=\"openImageCropperDialog()\" type=\"button\"><i class=\"fa fa-refresh\"></i> Change Photo</button>\r\n                        <button class=\"btn btn-primary mx-auto\" [disabled]=\"inputImageForm.invalid\"><i class=\"fa fa-save\"></i> Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"modal fade\" id=\"imageCropper\" tabindex=\"-1\" aria-labelledby=\"imageCropperLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog  modal-dialog-centered modal-dialog-scrollable\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"imageCropperLabel\">Crop Photo</h5>\r\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <img id=\"imageToCropped\" alt=\"Crop\" class=\"w-100\" [src]=\"\">\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <div class=\"d-flex mt-4\">\r\n                    <button class=\"btn btn-danger ms-3\" (click)=\"imageCropper.hide();formData.get(selectedImage+'-file')?.reset()\"><i class=\"fa fa-close\"></i> Cancel</button>\r\n                    <button class=\"btn btn-success ms-3\" (click)=\"handleSelectedEvent()\" type=\"button\"><i class=\"fa fa-save\"></i> Save</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"modal fade\" id=\"myInfo\" tabindex=\"-1\" aria-labelledby=\"myInfoLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog  modal-dialog-centered modal-dialog-scrollable\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"myInfoLabel\">Contact Information</h5>\r\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <h5>Hiren Sojitra</h5>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"email\" class=\"form-label\">Email:</label>\r\n                    <a href=\"mailto:hirensojitra007@gmail.com\" class=\"form-control text-decoration-none fw-bold\">hirensojitra007&#64;gmail.com</a>\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"mobile\" class=\"form-label\">Mobile:</label>\r\n                    <a href=\"tel:+919429558759\" class=\"form-control text-decoration-none fw-bold\">+919429558759</a>\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"social\" class=\"form-label\">Social Links:</label><br>\r\n                    <a href=\"http://www.facebook.com/SOJITRAHIREN\" class=\"btn btn-primary m-2 text-decoration-none\" target=\"_blank\"><i class=\"fa fa-facebook me-2\"></i>Facebook</a>\r\n                    <a href=\"http://www.instagram.com/HIREN_SOJITRA\" class=\"btn btn-danger m-2 text-decoration-none\" target=\"_blank\"><i class=\"fa fa-instagram me-2\"></i>Instagram</a>\r\n                    <a href=\"http://www.twitter.com/SOJITRA_HIREN\" class=\"btn btn-dark m-2 text-decoration-none\" target=\"_blank\"><i class=\"fa fa-twitter me-2\"></i>Twitter</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>", "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PosterComponent } from './poster.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: PosterComponent,\r\n  data: {\r\n    title: 'Proposal for Web Application Poster Generation Service | Gujarat Uvach',\r\n    description: 'Discover our web application for generating election campaign posters, festival posts, and other promotional activities. Customize posters with photos, names, addresses, designations, and contact details for efficient and personalized promotional material.',\r\n    keywords: 'poster generation, campaign posters, election posters, festival posts, promotional activities, customization, Gujarat Uvach, web application',\r\n    robots: 'index, follow',\r\n    'og:image': 'https://vmi2070714.contaboserver.net/api/v1/img/uploads/wLmyK?quality=30',\r\n    'og:image:alt': 'Gujarat Uvach Logo',\r\n    'og:image:type': 'image/svg+xml',\r\n    'og:image:width': '1200',\r\n    'og:image:height': '630',\r\n    'og:title': 'Web Application Poster Generation Service | Gujarat Uvach',\r\n    'og:description': 'Generate personalized posters for campaigns and festivals with Gujarat Info’s web application. Easily customize with your photos, names, and contact details.',\r\n  }\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PosterRoutingModule { }\r\n", "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PosterRoutingModule } from './poster-routing.module';\r\nimport { PosterComponent } from './poster.component';\r\nimport { SharedModule } from '../../common/shared/shared.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PosterComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PosterRoutingModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class PosterModule { }\r\n"],
  "mappings": "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",
  "names": ["document", "event", "item"]
}
